<Activity mc:Ignorable="sap sap2010" x:Class="CollectionHighwayFlow" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:up="clr-namespace:UP_Lib_Adapter_CollectionHighway.Public;assembly=UP_Lib_Adapter_CollectionHighway" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_WorkArea" Type="InArgument(x:String)" />
    <x:Property Name="in_AccountNumber" Type="InArgument(x:String)" />
    <x:Property Name="out_IsSubmit" Type="OutArgument(x:Boolean)" />
    <x:Property Name="out_OutcomeReason" Type="OutArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1172.8,1448</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Flowchart - Collection Highway flow" sap:VirtualizedContainerService.HintSize="930.4,1550.4" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="IsWorkAreaSelected" />
      <Variable x:TypeArguments="x:String" Name="WorkAreaError" />
      <Variable x:TypeArguments="x:Boolean" Name="IsLookupResultsAppeared" />
      <Variable x:TypeArguments="x:String" Name="LookupResultsError" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Results" />
      <Variable x:TypeArguments="x:Int32" Name="ResultsCount" />
      <Variable x:TypeArguments="x:Boolean" Name="IsGetLookupResultsSuccess" />
      <Variable x:TypeArguments="x:String" Name="GetLookupResultsError" />
      <Variable x:TypeArguments="x:Boolean" Name="IsSubmit" />
      <Variable x:TypeArguments="x:String" Name="OutcomeReason" />
      <Variable x:TypeArguments="x:String" Name="Asset" />
      <Variable x:TypeArguments="x:Int32" Name="RowNumber" />
      <Variable x:TypeArguments="x:Boolean" Name="IsGetOutcomeSuccess" />
      <Variable x:TypeArguments="x:String" Name="GetOutcomeError" />
      <Variable x:TypeArguments="x:Boolean" Name="IsSelectAssetSuccess" />
      <Variable x:TypeArguments="x:String" Name="SelectAssetError" />
      <Variable x:TypeArguments="x:String" Name="Instruction" />
      <Variable x:TypeArguments="x:String" Name="Status" />
      <Variable x:TypeArguments="x:Boolean" Name="IsInstructionFetched" />
      <Variable x:TypeArguments="x:String" Name="InstructionError" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75.2</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.7 300,107.7</av:PointCollection>
        <x:Double x:Key="Height">1513.6000000000001</x:Double>
        <x:Double x:Key="Width">896.8</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID13</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID13">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,107.7</av:Point>
          <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,160.5 300,190.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Start CollectionHighwayFlow" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info">
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">"Start CollectionHighwayFlow"</CSharpValue>
          </InArgument>
        </ui:LogMessage.Message>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">200,190.5</av:Point>
              <av:Size x:Key="ShapeSize">200,52.8</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">300,243.3 300,276.4</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <up:CollectionHighway_ChooseWorkArea DisplayName="ChooseWorkArea" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="CollectionHighway_ChooseWorkArea_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <up:CollectionHighway_ChooseWorkArea.in_IsIncognito>
              <InArgument x:TypeArguments="x:Boolean">
                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">Convert.ToBoolean(GlobalVariables.g_Config["IsCollectionHighwayIncognito"])</CSharpValue>
              </InArgument>
            </up:CollectionHighway_ChooseWorkArea.in_IsIncognito>
            <up:CollectionHighway_ChooseWorkArea.in_MaxTimeout>
              <InArgument x:TypeArguments="x:Int32">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">Convert.ToInt32(GlobalVariables.g_Config["MaxTimeOutSec"])</CSharpValue>
              </InArgument>
            </up:CollectionHighway_ChooseWorkArea.in_MaxTimeout>
            <up:CollectionHighway_ChooseWorkArea.in_MedTimeout>
              <InArgument x:TypeArguments="x:Int32">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">Convert.ToInt32(GlobalVariables.g_Config["MediumTimeOutSec"])</CSharpValue>
              </InArgument>
            </up:CollectionHighway_ChooseWorkArea.in_MedTimeout>
            <up:CollectionHighway_ChooseWorkArea.in_WorkArea>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">in_WorkArea</CSharpValue>
              </InArgument>
            </up:CollectionHighway_ChooseWorkArea.in_WorkArea>
            <up:CollectionHighway_ChooseWorkArea.out_IsWorkAreaSelected>
              <OutArgument x:TypeArguments="x:Boolean">
                <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">IsWorkAreaSelected</CSharpReference>
              </OutArgument>
            </up:CollectionHighway_ChooseWorkArea.out_IsWorkAreaSelected>
            <up:CollectionHighway_ChooseWorkArea.out_WorkAreaError>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">WorkAreaError</CSharpReference>
              </OutArgument>
            </up:CollectionHighway_ChooseWorkArea.out_WorkAreaError>
          </up:CollectionHighway_ChooseWorkArea>
          <FlowStep.Next>
            <FlowDecision x:Name="__ReferenceID1" DisplayName="IsWorkAreaSelected" sap:VirtualizedContainerService.HintSize="111.2,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
              <FlowDecision.Condition>
                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">IsWorkAreaSelected</CSharpValue>
              </FlowDecision.Condition>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">244.39999999999998,276.4</av:Point>
                  <av:Size x:Key="ShapeSize">111.2,87.2</av:Size>
                  <av:PointCollection x:Key="TrueConnector">244.39999999999998,320 214.39999999999998,320 214.39999999999998,383.6 300,383.6 300,413.6</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">200,413.6</av:Point>
                      <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">300,466.40000000000003 300,496.4</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <up:CollectionHighway_PerformLookup DisplayName="PerformAccountLookup" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="CollectionHighway_PerformLookup_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <up:CollectionHighway_PerformLookup.in_AccountNumber>
                      <InArgument x:TypeArguments="ss:SecureString">
                        <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">new System.Net.NetworkCredential(string.Empty, in_AccountNumber).SecurePassword</CSharpValue>
                      </InArgument>
                    </up:CollectionHighway_PerformLookup.in_AccountNumber>
                    <up:CollectionHighway_PerformLookup.in_IsIncognito>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">Convert.ToBoolean(GlobalVariables.g_Config["IsCollectionHighwayIncognito"])</CSharpValue>
                      </InArgument>
                    </up:CollectionHighway_PerformLookup.in_IsIncognito>
                    <up:CollectionHighway_PerformLookup.in_MaxTimeout>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">Convert.ToInt32(GlobalVariables.g_Config["MaxTimeOutSec"])</CSharpValue>
                      </InArgument>
                    </up:CollectionHighway_PerformLookup.in_MaxTimeout>
                    <up:CollectionHighway_PerformLookup.in_MedTimeout>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">Convert.ToInt32(GlobalVariables.g_Config["MediumTimeOutSec"])</CSharpValue>
                      </InArgument>
                    </up:CollectionHighway_PerformLookup.in_MedTimeout>
                    <up:CollectionHighway_PerformLookup.out_IsLookupResultsAppeared>
                      <OutArgument x:TypeArguments="x:Boolean">
                        <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">IsLookupResultsAppeared</CSharpReference>
                      </OutArgument>
                    </up:CollectionHighway_PerformLookup.out_IsLookupResultsAppeared>
                    <up:CollectionHighway_PerformLookup.out_LookupResultsError>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">LookupResultsError</CSharpReference>
                      </OutArgument>
                    </up:CollectionHighway_PerformLookup.out_LookupResultsError>
                  </up:CollectionHighway_PerformLookup>
                  <FlowStep.Next>
                    <FlowDecision x:Name="__ReferenceID4" DisplayName="IsLookupResultsAppeared" sap:VirtualizedContainerService.HintSize="142.4,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                      <FlowDecision.Condition>
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">IsLookupResultsAppeared</CSharpValue>
                      </FlowDecision.Condition>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <av:Point x:Key="ShapeLocation">228.8,496.4</av:Point>
                          <av:Size x:Key="ShapeSize">142.4,87.2</av:Size>
                          <av:PointCollection x:Key="TrueConnector">228.8,540 210,540 210,603.6 300,603.6 300,633.6</av:PointCollection>
                          <av:PointCollection x:Key="FalseConnector">371.20000000000005,540 650,540 650,573.6</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <FlowDecision.True>
                        <FlowStep x:Name="__ReferenceID3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">200,633.6</av:Point>
                              <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">300,686.4 300,726.4</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <up:CollectionHighway_GetLookupResults DisplayName="GetLookupResults" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="CollectionHighway_GetLookupResults_1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <up:CollectionHighway_GetLookupResults.in_IsIncognito>
                              <InArgument x:TypeArguments="x:Boolean">
                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">Convert.ToBoolean(GlobalVariables.g_Config["IsCollectionHighwayIncognito"])</CSharpValue>
                              </InArgument>
                            </up:CollectionHighway_GetLookupResults.in_IsIncognito>
                            <up:CollectionHighway_GetLookupResults.in_MaxTimeout>
                              <InArgument x:TypeArguments="x:Int32">
                                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">Convert.ToInt32(GlobalVariables.g_Config["MaxTimeOutSec"])</CSharpValue>
                              </InArgument>
                            </up:CollectionHighway_GetLookupResults.in_MaxTimeout>
                            <up:CollectionHighway_GetLookupResults.in_MedTimeout>
                              <InArgument x:TypeArguments="x:Int32">
                                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">Convert.ToInt32(GlobalVariables.g_Config["MediumTimeOutSec"])</CSharpValue>
                              </InArgument>
                            </up:CollectionHighway_GetLookupResults.in_MedTimeout>
                            <up:CollectionHighway_GetLookupResults.out_GetLookupResultsError>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">GetLookupResultsError</CSharpReference>
                              </OutArgument>
                            </up:CollectionHighway_GetLookupResults.out_GetLookupResultsError>
                            <up:CollectionHighway_GetLookupResults.out_IsGetLookupResultsSuccess>
                              <OutArgument x:TypeArguments="x:Boolean">
                                <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">IsGetLookupResultsSuccess</CSharpReference>
                              </OutArgument>
                            </up:CollectionHighway_GetLookupResults.out_IsGetLookupResultsSuccess>
                            <up:CollectionHighway_GetLookupResults.out_ResultsCount>
                              <OutArgument x:TypeArguments="x:Int32">
                                <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">ResultsCount</CSharpReference>
                              </OutArgument>
                            </up:CollectionHighway_GetLookupResults.out_ResultsCount>
                            <up:CollectionHighway_GetLookupResults.out_ResultsDataTable>
                              <OutArgument x:TypeArguments="sd:DataTable">
                                <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">dt_Results</CSharpReference>
                              </OutArgument>
                            </up:CollectionHighway_GetLookupResults.out_ResultsDataTable>
                          </up:CollectionHighway_GetLookupResults>
                          <FlowStep.Next>
                            <FlowDecision x:Name="__ReferenceID6" DisplayName="IsGetLookupResultsSuccess" sap:VirtualizedContainerService.HintSize="148,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                              <FlowDecision.Condition>
                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">IsGetLookupResultsSuccess</CSharpValue>
                              </FlowDecision.Condition>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <av:Point x:Key="ShapeLocation">226,726.4</av:Point>
                                  <av:Size x:Key="ShapeSize">148,87.2</av:Size>
                                  <av:PointCollection x:Key="TrueConnector">226,770 210,770 210,833.6 300,833.6 300,863.6</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID7">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">200,863.6</av:Point>
                                      <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                                      <av:PointCollection x:Key="ConnectorLocation">300,916.4 300,946.4</av:PointCollection>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="result = false;&#xA;errMsg = &quot;&quot;;&#xA;asset = &quot;&quot;;&#xA;rowNumber = 0;&#xA;isSubmit = false;&#xA;outcomeReason = &quot;&quot;;&#xA;int resultsCount = dtResults.Rows.Count;&#xA;&#xA;try&#xA;{&#xA;&#x9;if (resultsCount == 0)&#xA;&#x9;{&#xA;&#x9;&#x9;// No results found - withdraw.&#xA;&#x9;&#x9;isSubmit = false;&#xA;&#x9;&#x9;outcomeReason = &quot;No results found.&quot;;&#xA;&#x9;}&#xA;&#x9;else if (resultsCount == 1)&#xA;&#x9;{&#xA;&#x9;&#x9;// Only one search result&#xA;&#x9;&#x9;if (dtResults.Rows[0].Field&lt;bool&gt;(&quot;IsEnabled&quot;))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;// One result is enabled button - submit.&#xA;&#x9;&#x9;&#x9;isSubmit = true;&#xA;&#x9;&#x9;&#x9;outcomeReason = &quot;1 button enabled same asset.&quot;;&#xA;&#x9;&#x9;&#x9;asset = dtResults.Rows[0].Field&lt;string&gt;(&quot;Asset&quot;);&#xA;&#x9;&#x9;&#x9;rowNumber = dtResults.Rows[0].Field&lt;int&gt;(&quot;RowNumber&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;// One result is disabled button - withdraw.&#xA;&#x9;&#x9;&#x9;isSubmit = false;&#xA;&#x9;&#x9;&#x9;outcomeReason = &quot;No button enabled.&quot;;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;else&#xA;&#x9;{&#xA;&#x9;&#x9;// Multiple results - get count of enabled buttons.&#xA;&#x9;&#x9;int enabledCount = dtResults.AsEnumerable().Where(x =&gt; x.Field&lt;bool&gt;(&quot;IsEnabled&quot;)).ToList().Count;&#xA;&#xA;&#x9;&#x9;if (enabledCount == 0)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;// All buttons disabled - withdraw.&#xA;&#x9;&#x9;&#x9;isSubmit = false;&#xA;&#x9;&#x9;&#x9;outcomeReason = &quot;No button enabled.&quot;;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (enabledCount == 1)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;// One enabled button only - get count of unique assets.&#xA;&#x9;&#x9;&#x9;int uniqueCount = dtResults.AsEnumerable().Select(r =&gt; r.Field&lt;string&gt;(&quot;Asset&quot;)).Distinct().Count();&#xA;&#x9;&#x9;&#x9;if (uniqueCount == 1)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;// One unique asset - submit.&#xA;&#x9;&#x9;&#x9;&#x9;isSubmit = true;&#xA;&#x9;&#x9;&#x9;&#x9;outcomeReason = &quot;1 button enabled same asset.&quot;;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;// Get the first enabled asset and rownumber&#xA;&#x9;&#x9;&#x9;&#x9;DataRow drEnabled = dtResults.AsEnumerable().Where(x =&gt; x.Field&lt;bool&gt;(&quot;IsEnabled&quot;)).FirstOrDefault();&#xA;&#x9;&#x9;&#x9;&#x9;asset = drEnabled.Field&lt;string&gt;(&quot;Asset&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;rowNumber = drEnabled.Field&lt;int&gt;(&quot;RowNumber&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;// Multiple different assets - withdraw.&#xA;&#x9;&#x9;&#x9;&#x9;isSubmit = false;&#xA;&#x9;&#x9;&#x9;&#x9;outcomeReason = &quot;1 button enabled different asset.&quot;;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;// Multiple enabled buttons - get count of unique assets.&#xA;&#x9;&#x9;&#x9;int uniqueCount = dtResults.AsEnumerable().Select(r =&gt; r.Field&lt;string&gt;(&quot;Asset&quot;)).Distinct().Count();&#xA;&#x9;&#x9;&#x9;if (uniqueCount == 1)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;// One unique asset - submit.&#xA;&#x9;&#x9;&#x9;&#x9;isSubmit = true;&#xA;&#x9;&#x9;&#x9;&#x9;outcomeReason = &quot;More than 1 button enabled same asset.&quot;;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;// Get the first enabled asset and rownumber&#xA;&#x9;&#x9;&#x9;&#x9;DataRow drEnabled = dtResults.AsEnumerable().Where(x =&gt; x.Field&lt;bool&gt;(&quot;IsEnabled&quot;)).FirstOrDefault();&#xA;&#x9;&#x9;&#x9;&#x9;asset = drEnabled.Field&lt;string&gt;(&quot;Asset&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;rowNumber = drEnabled.Field&lt;int&gt;(&quot;RowNumber&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;// Multiple different assets - withdraw.&#xA;&#x9;&#x9;&#x9;&#x9;isSubmit = false;&#xA;&#x9;&#x9;&#x9;&#x9;outcomeReason = &quot;More than 1 button enabled different asset.&quot;;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;result = true;&#xA;}&#xA;catch (Exception ex)&#xA;{&#xA;&#x9;errMsg = ex.Message;&#xA;&#x9;result = false;&#xA;}" DisplayName="GetOutcome" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
                                    <ui:InvokeCode.Arguments>
                                      <InArgument x:TypeArguments="sd:DataTable" x:Key="dtResults">
                                        <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">dt_Results</CSharpValue>
                                      </InArgument>
                                      <OutArgument x:TypeArguments="x:Boolean" x:Key="isSubmit">
                                        <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">IsSubmit</CSharpReference>
                                      </OutArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="outcomeReason">
                                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">OutcomeReason</CSharpReference>
                                      </OutArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="asset">
                                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">Asset</CSharpReference>
                                      </OutArgument>
                                      <OutArgument x:TypeArguments="x:Int32" x:Key="rowNumber">
                                        <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">RowNumber</CSharpReference>
                                      </OutArgument>
                                      <OutArgument x:TypeArguments="x:Boolean" x:Key="result">
                                        <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">IsGetOutcomeSuccess</CSharpReference>
                                      </OutArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="errMsg">
                                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">GetOutcomeError</CSharpReference>
                                      </OutArgument>
                                    </ui:InvokeCode.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeCode>
                                  <FlowStep.Next>
                                    <FlowDecision x:Name="__ReferenceID8" DisplayName="IsGetOutcomeSuccess" sap:VirtualizedContainerService.HintSize="120.8,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_5">
                                      <FlowDecision.Condition>
                                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">IsGetOutcomeSuccess</CSharpValue>
                                      </FlowDecision.Condition>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <av:Point x:Key="ShapeLocation">239.60000000000002,946.4</av:Point>
                                          <av:Size x:Key="ShapeSize">120.8,87.2</av:Size>
                                          <av:PointCollection x:Key="TrueConnector">239.60000000000002,990 210,990 210,1053.6 300,1053.6 300,1083.6</av:PointCollection>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <FlowDecision.True>
                                        <FlowStep x:Name="__ReferenceID10">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <av:Point x:Key="ShapeLocation">200,1083.6</av:Point>
                                              <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                                              <av:PointCollection x:Key="ConnectorLocation">300,1136.3999999999999 300,1173.6</av:PointCollection>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Log Message - Outcome" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info">
                                            <ui:LogMessage.Message>
                                              <InArgument x:TypeArguments="x:Object">
                                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">"Outcome is " + (IsSubmit ? "Submit" : "Withdraw") + ". Reason is " + OutcomeReason</CSharpValue>
                                              </InArgument>
                                            </ui:LogMessage.Message>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:LogMessage>
                                          <FlowStep.Next>
                                            <FlowStep x:Name="__ReferenceID9">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <av:Point x:Key="ShapeLocation">200,1173.6</av:Point>
                                                  <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                                                  <av:PointCollection x:Key="ConnectorLocation">300,1226.3999999999999 300,1256.4</av:PointCollection>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <up:CollectionHighway_SelectAsset DisplayName="SelectAsset" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="CollectionHighway_SelectAsset_1">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <up:CollectionHighway_SelectAsset.in_IsIncognito>
                                                  <InArgument x:TypeArguments="x:Boolean">
                                                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">Convert.ToBoolean(GlobalVariables.g_Config["IsCollectionHighwayIncognito"])</CSharpValue>
                                                  </InArgument>
                                                </up:CollectionHighway_SelectAsset.in_IsIncognito>
                                                <up:CollectionHighway_SelectAsset.in_MaxTimeout>
                                                  <InArgument x:TypeArguments="x:Int32">
                                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">Convert.ToInt32(GlobalVariables.g_Config["MaxTimeOutSec"])</CSharpValue>
                                                  </InArgument>
                                                </up:CollectionHighway_SelectAsset.in_MaxTimeout>
                                                <up:CollectionHighway_SelectAsset.in_MedTimeout>
                                                  <InArgument x:TypeArguments="x:Int32">
                                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">Convert.ToInt32(GlobalVariables.g_Config["MediumTimeOutSec"])</CSharpValue>
                                                  </InArgument>
                                                </up:CollectionHighway_SelectAsset.in_MedTimeout>
                                                <up:CollectionHighway_SelectAsset.in_RowNumber>
                                                  <InArgument x:TypeArguments="x:Int32">
                                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">RowNumber</CSharpValue>
                                                  </InArgument>
                                                </up:CollectionHighway_SelectAsset.in_RowNumber>
                                                <up:CollectionHighway_SelectAsset.out_IsSelectAssetSuccess>
                                                  <OutArgument x:TypeArguments="x:Boolean">
                                                    <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">IsSelectAssetSuccess</CSharpReference>
                                                  </OutArgument>
                                                </up:CollectionHighway_SelectAsset.out_IsSelectAssetSuccess>
                                                <up:CollectionHighway_SelectAsset.out_SelectAssetError>
                                                  <OutArgument x:TypeArguments="x:String">
                                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">SelectAssetError</CSharpReference>
                                                  </OutArgument>
                                                </up:CollectionHighway_SelectAsset.out_SelectAssetError>
                                              </up:CollectionHighway_SelectAsset>
                                              <FlowStep.Next>
                                                <FlowDecision x:Name="__ReferenceID11" DisplayName="IsSelectAssetSuccess" sap:VirtualizedContainerService.HintSize="113.6,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_6">
                                                  <FlowDecision.Condition>
                                                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">IsSelectAssetSuccess</CSharpValue>
                                                  </FlowDecision.Condition>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <av:Point x:Key="ShapeLocation">243.2,1256.4</av:Point>
                                                      <av:Size x:Key="ShapeSize">113.6,87.2</av:Size>
                                                      <av:PointCollection x:Key="TrueConnector">243.2,1300 213.2,1300 213.2,1363.6 300,1363.6 300,1393.6</av:PointCollection>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <FlowDecision.True>
                                                    <FlowStep x:Name="__ReferenceID12">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <av:Point x:Key="ShapeLocation">200,1393.6</av:Point>
                                                          <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <up:CollectionHighway_GetInstructionsStatus DisplayName="GetInstructionsStatus" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="CollectionHighway_GetInstructionsStatus_1">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <up:CollectionHighway_GetInstructionsStatus.in_IsIncognito>
                                                          <InArgument x:TypeArguments="x:Boolean">
                                                            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">Convert.ToBoolean(GlobalVariables.g_Config["IsCollectionHighwayIncognito"])</CSharpValue>
                                                          </InArgument>
                                                        </up:CollectionHighway_GetInstructionsStatus.in_IsIncognito>
                                                        <up:CollectionHighway_GetInstructionsStatus.in_MaxTimeout>
                                                          <InArgument x:TypeArguments="x:Int32">
                                                            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">Convert.ToInt32(GlobalVariables.g_Config["MaxTimeOutSec"])</CSharpValue>
                                                          </InArgument>
                                                        </up:CollectionHighway_GetInstructionsStatus.in_MaxTimeout>
                                                        <up:CollectionHighway_GetInstructionsStatus.in_MedTimeout>
                                                          <InArgument x:TypeArguments="x:Int32">
                                                            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">Convert.ToInt32(GlobalVariables.g_Config["MediumTimeOutSec"])</CSharpValue>
                                                          </InArgument>
                                                        </up:CollectionHighway_GetInstructionsStatus.in_MedTimeout>
                                                        <up:CollectionHighway_GetInstructionsStatus.out_Instruction>
                                                          <OutArgument x:TypeArguments="x:String">
                                                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">Instruction</CSharpReference>
                                                          </OutArgument>
                                                        </up:CollectionHighway_GetInstructionsStatus.out_Instruction>
                                                        <up:CollectionHighway_GetInstructionsStatus.out_InstructionError>
                                                          <OutArgument x:TypeArguments="x:String">
                                                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">InstructionError</CSharpReference>
                                                          </OutArgument>
                                                        </up:CollectionHighway_GetInstructionsStatus.out_InstructionError>
                                                        <up:CollectionHighway_GetInstructionsStatus.out_IsInstructionFetched>
                                                          <OutArgument x:TypeArguments="x:Boolean">
                                                            <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">IsInstructionFetched</CSharpReference>
                                                          </OutArgument>
                                                        </up:CollectionHighway_GetInstructionsStatus.out_IsInstructionFetched>
                                                        <up:CollectionHighway_GetInstructionsStatus.out_Status>
                                                          <OutArgument x:TypeArguments="x:String">
                                                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">Status</CSharpReference>
                                                          </OutArgument>
                                                        </up:CollectionHighway_GetInstructionsStatus.out_Status>
                                                      </up:CollectionHighway_GetInstructionsStatus>
                                                    </FlowStep>
                                                  </FlowDecision.True>
                                                </FlowDecision>
                                              </FlowStep.Next>
                                            </FlowStep>
                                          </FlowStep.Next>
                                        </FlowStep>
                                      </FlowDecision.True>
                                    </FlowDecision>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.True>
                            </FlowDecision>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowDecision.True>
                      <FlowDecision.False>
                        <FlowStep x:Name="__ReferenceID5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">433.2,573.6</av:Point>
                              <av:Size x:Key="ShapeSize">433.6,52.8</av:Size>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:MultipleAssign DisplayName="Withdraw - No results" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Boolean">
                                      <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">out_IsSubmit</CSharpReference>
                                    </OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">
                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">out_OutcomeReason</CSharpReference>
                                    </OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">No results found</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:MultipleAssign>
                        </FlowStep>
                      </FlowDecision.False>
                    </FlowDecision>
                  </FlowStep.Next>
                </FlowStep>
              </FlowDecision.True>
            </FlowDecision>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
    <x:Reference>__ReferenceID11</x:Reference>
    <x:Reference>__ReferenceID12</x:Reference>
  </Flowchart>
</Activity>