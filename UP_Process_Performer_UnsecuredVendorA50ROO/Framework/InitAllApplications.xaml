<Activity mc:Ignorable="sap sap2010" x:Class="InitAllApplications" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:up="clr-namespace:UP_Lib_Adapter_Intralink.Public;assembly=UP_Lib_Adapter_Intralink" xmlns:up1="clr-namespace:UP_Lib_Adapter_CollectionHighway.Public;assembly=UP_Lib_Adapter_CollectionHighway" xmlns:up2="clr-namespace:UP_Lib_Connector_HashiCorpVault.Public;assembly=UP_Lib_Connector_HashiCorpVault" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1474,5846</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Security</x:String>
      <x:String>UP_Lib_Adapter_CollectionHighway.Public</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UP_Lib_Adapter_Intralink.Public</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UP_Lib_Connector_HashiCorpVault.Public</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
      <x:String>UiPath.UIAutomationNext.Models</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UP_Lib_Adapter_CollectionHighway</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.PowerShell.Commands.Diagnostics</AssemblyReference>
      <AssemblyReference>System.Diagnostics.FileVersionInfo</AssemblyReference>
      <AssemblyReference>System.Diagnostics.Process</AssemblyReference>
      <AssemblyReference>System.Diagnostics.DiagnosticSource</AssemblyReference>
      <AssemblyReference>System.Diagnostics.EventLog</AssemblyReference>
      <AssemblyReference>System.Diagnostics.PerformanceCounter</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TextWriterTraceListener</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TraceSource</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Private.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>UP_Lib_Adapter_Intralink</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DataService.Activities.Core</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography.Activities</AssemblyReference>
      <AssemblyReference>UP_Lib_Connector_HashiCorpVault</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Open applications used in the process and do necessary initialization procedures (e.g., login)." DisplayName="Initialize All Applications" sap:VirtualizedContainerService.HintSize="608,5781" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="CurrentPage" />
      <Variable x:TypeArguments="x:Boolean" Name="IsLoginSuccess" />
      <Variable x:TypeArguments="x:String" Name="LoginError" />
      <Variable x:TypeArguments="x:Boolean" Name="IsPwdUpdateReq" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="PwdUpdateAssetValues" />
      <Variable x:TypeArguments="ss:SecureString" Name="NewPassword" />
      <Variable x:TypeArguments="x:Boolean" Name="IsPasswordChanged" />
      <Variable x:TypeArguments="x:String" Name="PasswordChangeError" />
      <Variable x:TypeArguments="x:Boolean" Name="PatchCredResult" />
      <Variable x:TypeArguments="x:Boolean" Name="PatchCredIsError" />
      <Variable x:TypeArguments="x:String" Name="PatchCredError" />
      <Variable x:TypeArguments="s:Exception" Name="PatchCredException" />
      <Variable x:TypeArguments="x:Boolean" Name="IsDHLoginSuccess" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log message (Initialize applications)" sap:VirtualizedContainerService.HintSize="546,173" sap2010:WorkflowViewState.IdRef="LogMessage_1">
      <ui:LogMessage.Level>
        <InArgument x:TypeArguments="ui:LogLevel">
          <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">LogLevel.Trace</CSharpValue>
        </InArgument>
      </ui:LogMessage.Level>
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">"Opening applications..."</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <ui:RetryScope DisplayName="Retry Scope-init" sap:VirtualizedContainerService.HintSize="546,2045" sap2010:WorkflowViewState.IdRef="RetryScope_1">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="416,1724" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Kills all Windows processes representing applications used in this business process to assure that the execution starts in a clean state.&#xA;Since the applications are assumed to be already closed, CloseAllApplications is skipped and just KillAllProcess is invoked." DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="354,279" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_KillAppNames">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">GlobalVariables.g_Config["KillAppNames"].ToString()</CSharpValue>
                </InArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
            <up:IL_NavToApp DisplayName="IL_NavToApp-Login" sap:VirtualizedContainerService.HintSize="354,785" sap2010:WorkflowViewState.IdRef="IL_NavToApp_1" in_UseEdge="False" in_UseRedirect="False">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <up:IL_NavToApp.in_AppName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">in_Config["PegaBPMAppName"].ToString()</CSharpValue>
                </InArgument>
              </up:IL_NavToApp.in_AppName>
              <up:IL_NavToApp.in_Environment>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">in_Config["PegaBPMEnv"].ToString()</CSharpValue>
                </InArgument>
              </up:IL_NavToApp.in_Environment>
              <up:IL_NavToApp.in_IntraLinkPassword>
                <InArgument x:TypeArguments="ss:SecureString">
                  <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">GlobalVariables.g_SecurePasswordIntralink</CSharpValue>
                </InArgument>
              </up:IL_NavToApp.in_IntraLinkPassword>
              <up:IL_NavToApp.in_IntraLinkUserName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">GlobalVariables.g_UserNameIntralink</CSharpValue>
                </InArgument>
              </up:IL_NavToApp.in_IntraLinkUserName>
              <up:IL_NavToApp.in_IntralinkURL>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">in_Config["PegaBPMLoginURL"].ToString()</CSharpValue>
                </InArgument>
              </up:IL_NavToApp.in_IntralinkURL>
              <up:IL_NavToApp.in_IsIncognito>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">Convert.ToBoolean(in_Config["IsBPMIncognito"])</CSharpValue>
                </InArgument>
              </up:IL_NavToApp.in_IsIncognito>
              <up:IL_NavToApp.in_MaxTimeout>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">Convert.ToInt32(in_Config["MaxTimeOutSec"])</CSharpValue>
                </InArgument>
              </up:IL_NavToApp.in_MaxTimeout>
              <up:IL_NavToApp.in_MedTimeout>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">Convert.ToInt32(in_Config["MediumTimeOutSec"])</CSharpValue>
                </InArgument>
              </up:IL_NavToApp.in_MedTimeout>
              <up:IL_NavToApp.in_MinTimeout>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">Convert.ToInt32(in_Config["MinTimeOutSec"])</CSharpValue>
                </InArgument>
              </up:IL_NavToApp.in_MinTimeout>
              <up:IL_NavToApp.in_Transit>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">in_Config["PegaBPMTransit"].ToString()</CSharpValue>
                </InArgument>
              </up:IL_NavToApp.in_Transit>
              <up:IL_NavToApp.in_WebArgument>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" DisplayName="Literal&lt;String&gt;" Value="" />
                </InArgument>
              </up:IL_NavToApp.in_WebArgument>
              <up:IL_NavToApp.out_Result>
                <OutArgument x:TypeArguments="x:Boolean">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">IsLoginSuccess</CSharpReference>
                </OutArgument>
              </up:IL_NavToApp.out_Result>
            </up:IL_NavToApp>
            <up1:CollectionHighway_Login DisplayName="CollectionHighway_Login (Login Actions)" sap:VirtualizedContainerService.HintSize="354,572" sap2010:WorkflowViewState.IdRef="CollectionHighway_Login_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <up1:CollectionHighway_Login.in_CollectionHighwayURL>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">GlobalVariables.g_Config["CollectionHighwayLoginURL"].ToString()</CSharpValue>
                </InArgument>
              </up1:CollectionHighway_Login.in_CollectionHighwayURL>
              <up1:CollectionHighway_Login.in_IsIncognito>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">Convert.ToBoolean(GlobalVariables.g_Config["IsCollectionHighwayIncognito"])</CSharpValue>
                </InArgument>
              </up1:CollectionHighway_Login.in_IsIncognito>
              <up1:CollectionHighway_Login.in_MaxTimeout>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">Convert.ToInt32(GlobalVariables.g_Config["MaxTimeOutSec"])</CSharpValue>
                </InArgument>
              </up1:CollectionHighway_Login.in_MaxTimeout>
              <up1:CollectionHighway_Login.in_MedTimeout>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">Convert.ToInt32(GlobalVariables.g_Config["MediumTimeOutSec"])</CSharpValue>
                </InArgument>
              </up1:CollectionHighway_Login.in_MedTimeout>
              <up1:CollectionHighway_Login.in_Password>
                <InArgument x:TypeArguments="ss:SecureString">
                  <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">GlobalVariables.g_SecurePasswordCollHigh</CSharpValue>
                </InArgument>
              </up1:CollectionHighway_Login.in_Password>
              <up1:CollectionHighway_Login.in_UserName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">GlobalVariables.g_UserNameCollHigh</CSharpValue>
                </InArgument>
              </up1:CollectionHighway_Login.in_UserName>
              <up1:CollectionHighway_Login.in_WebArgument>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">GlobalVariables.g_Config["CollectionHighwayWebArg"].ToString()</CSharpValue>
                </InArgument>
              </up1:CollectionHighway_Login.in_WebArgument>
              <up1:CollectionHighway_Login.out_CurrentPage>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">CurrentPage</CSharpReference>
                </OutArgument>
              </up1:CollectionHighway_Login.out_CurrentPage>
              <up1:CollectionHighway_Login.out_IsLoginSuccess>
                <OutArgument x:TypeArguments="x:Boolean">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">IsDHLoginSuccess</CSharpReference>
                </OutArgument>
              </up1:CollectionHighway_Login.out_IsLoginSuccess>
              <up1:CollectionHighway_Login.out_LoginError>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">LoginError</CSharpReference>
                </OutArgument>
              </up1:CollectionHighway_Login.out_LoginError>
            </up1:CollectionHighway_Login>
          </Sequence>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean">
          <ui:CheckTrue DisplayName="Check True-IsLoginSuccess" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="CheckTrue_1">
            <ui:CheckTrue.ErrorMessage>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_75">"Failed to launch applications, Intralink: "+IsLoginSuccess+" DH: "+IsDHLoginSuccess</CSharpValue>
              </InArgument>
            </ui:CheckTrue.ErrorMessage>
            <ui:CheckTrue.Expression>
              <InArgument x:TypeArguments="x:Boolean">
                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_74">IsLoginSuccess&amp;&amp;IsDHLoginSuccess</CSharpValue>
              </InArgument>
            </ui:CheckTrue.Expression>
          </ui:CheckTrue>
        </ActivityFunc>
      </ui:RetryScope.Condition>
    </ui:RetryScope>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CheckIfPasswordRequiresUpdate - Invoke Workflow File (Process\\CheckIfPasswordRequiresUpdate.xaml)" sap:VirtualizedContainerService.HintSize="546,177" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Process\\CheckIfPasswordRequiresUpdate.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="x:Boolean" x:Key="out_IsPwdUpdateReq">
          <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">IsPwdUpdateReq</CSharpReference>
        </OutArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_DaysBeforePwdReset">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">Convert.ToInt32(GlobalVariables.g_Config["DaysBeforePasswordReset"])</CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Username">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">GlobalVariables.g_UserNameCollHigh</CSharpValue>
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:LogMessage DisplayName="Log Message-Password Update" sap:VirtualizedContainerService.HintSize="546,173" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">"Is Password Update Required: " + IsPwdUpdateReq.ToString()</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <If DisplayName="If - Pwd update required then change pwd" sap:VirtualizedContainerService.HintSize="546,3094" sap2010:WorkflowViewState.IdRef="If_4">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">IsPwdUpdateReq</CSharpValue>
        </InArgument>
      </If.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="512,2830" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Boolean" Name="IsRefreshWorkAreaSuccess" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GeneratePasswordAddToHashiCorp - Invoke Workflow File (Process\\GeneratePasswordAddToHashiCorp.xaml)" sap:VirtualizedContainerService.HintSize="450,177" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Process\\GeneratePasswordAddToHashiCorp.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_UpperAlphaChars">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_62">GlobalVariables.g_Config["UpperAlphaChars"].ToString()</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_LowerAlphaChars">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_63">GlobalVariables.g_Config["LowerAlphaChars"].ToString()</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_NumericChars">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">GlobalVariables.g_Config["NumericChars"].ToString()</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_SpecialChars">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_65">GlobalVariables.g_Config["SpecialChars"].ToString()</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_MinPasswordLength">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">Convert.ToInt32(GlobalVariables.g_Config["MinPasswordLength"].ToString())</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_LowerCharLength">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">Convert.ToInt32(GlobalVariables.g_Config["LowerCharLength"].ToString())</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_UpperCharLength">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">Convert.ToInt32(GlobalVariables.g_Config["UpperCharLength"].ToString())</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_NumericCharLength">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_69">Convert.ToInt32(GlobalVariables.g_Config["NumericCharLength"].ToString())</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_SpecialCharLength">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_70">Convert.ToInt32(GlobalVariables.g_Config["SpecialCharLength"].ToString())</CSharpValue>
              </InArgument>
              <OutArgument x:TypeArguments="ss:SecureString" x:Key="out_NewPassword">
                <CSharpReference x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">NewPassword</CSharpReference>
              </OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <up1:CollectionHighway_ChangePassword DisplayName="CollectionHighway_ChangePassword-DH" sap:VirtualizedContainerService.HintSize="450,530" sap2010:WorkflowViewState.IdRef="CollectionHighway_ChangePassword_2" in_WorkArea="Collection Agency">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <up1:CollectionHighway_ChangePassword.in_CurrentPassword>
              <InArgument x:TypeArguments="ss:SecureString">
                <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">GlobalVariables.g_SecurePasswordCollHigh</CSharpValue>
              </InArgument>
            </up1:CollectionHighway_ChangePassword.in_CurrentPassword>
            <up1:CollectionHighway_ChangePassword.in_IsIncognito>
              <InArgument x:TypeArguments="x:Boolean">
                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">Convert.ToBoolean(GlobalVariables.g_Config["IsCollectionHighwayIncognito"])</CSharpValue>
              </InArgument>
            </up1:CollectionHighway_ChangePassword.in_IsIncognito>
            <up1:CollectionHighway_ChangePassword.in_MaxTimeout>
              <InArgument x:TypeArguments="x:Int32">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">Convert.ToInt32(GlobalVariables.g_Config["MaxTimeOutSec"])</CSharpValue>
              </InArgument>
            </up1:CollectionHighway_ChangePassword.in_MaxTimeout>
            <up1:CollectionHighway_ChangePassword.in_MedTimeout>
              <InArgument x:TypeArguments="x:Int32">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">Convert.ToInt32(GlobalVariables.g_Config["MediumTimeOutSec"])</CSharpValue>
              </InArgument>
            </up1:CollectionHighway_ChangePassword.in_MedTimeout>
            <up1:CollectionHighway_ChangePassword.in_NewPassword>
              <InArgument x:TypeArguments="ss:SecureString">
                <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">NewPassword</CSharpValue>
              </InArgument>
            </up1:CollectionHighway_ChangePassword.in_NewPassword>
            <up1:CollectionHighway_ChangePassword.in_UserName>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">GlobalVariables.g_UserNameCollHigh</CSharpValue>
              </InArgument>
            </up1:CollectionHighway_ChangePassword.in_UserName>
            <up1:CollectionHighway_ChangePassword.out_IsPasswordChanged>
              <OutArgument x:TypeArguments="x:Boolean">
                <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">IsPasswordChanged</CSharpReference>
              </OutArgument>
            </up1:CollectionHighway_ChangePassword.out_IsPasswordChanged>
            <up1:CollectionHighway_ChangePassword.out_PasswordChangeError>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">PasswordChangeError</CSharpReference>
              </OutArgument>
            </up1:CollectionHighway_ChangePassword.out_PasswordChangeError>
          </up1:CollectionHighway_ChangePassword>
          <If DisplayName="If - pwd not changed then throw error" sap:VirtualizedContainerService.HintSize="450,474" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">!IsPasswordChanged</CSharpValue>
              </InArgument>
            </If.Condition>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,201" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Throw DisplayName="Throw-TE" sap:VirtualizedContainerService.HintSize="354,113" sap2010:WorkflowViewState.IdRef="Throw_1">
                  <InArgument x:TypeArguments="s:Exception">
                    <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">new Exception("Failed to update password in CollectionHighway. " + PasswordChangeError)</CSharpValue>
                  </InArgument>
                </Throw>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,103" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
          <up2:PatchCredentialInVault DisplayName="PatchCredentialInVault-Cred" sap:VirtualizedContainerService.HintSize="450,530" sap2010:WorkflowViewState.IdRef="PatchCredentialInVault_1" in_IsExistingCred="True">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <up2:PatchCredentialInVault.in_HashiCorpVaultSecretEndPoint>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">in_Config["HashiCorpCollHighSecretEndPointURL"].ToString()</CSharpValue>
              </InArgument>
            </up2:PatchCredentialInVault.in_HashiCorpVaultSecretEndPoint>
            <up2:PatchCredentialInVault.in_SecureStringPassword>
              <InArgument x:TypeArguments="ss:SecureString">
                <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">NewPassword</CSharpValue>
              </InArgument>
            </up2:PatchCredentialInVault.in_SecureStringPassword>
            <up2:PatchCredentialInVault.in_SharedFolderPath>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">in_Config["HashiCorpSharedFolderPath"].ToString()</CSharpValue>
              </InArgument>
            </up2:PatchCredentialInVault.in_SharedFolderPath>
            <up2:PatchCredentialInVault.in_Username>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">GlobalVariables.g_UserNameCollHigh</CSharpValue>
              </InArgument>
            </up2:PatchCredentialInVault.in_Username>
            <up2:PatchCredentialInVault.out_Error>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">PatchCredError</CSharpReference>
              </OutArgument>
            </up2:PatchCredentialInVault.out_Error>
            <up2:PatchCredentialInVault.out_Exception>
              <OutArgument x:TypeArguments="s:Exception">
                <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">PatchCredException</CSharpReference>
              </OutArgument>
            </up2:PatchCredentialInVault.out_Exception>
            <up2:PatchCredentialInVault.out_IsError>
              <OutArgument x:TypeArguments="x:Boolean">
                <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">PatchCredIsError</CSharpReference>
              </OutArgument>
            </up2:PatchCredentialInVault.out_IsError>
            <up2:PatchCredentialInVault.out_Result>
              <OutArgument x:TypeArguments="x:Boolean">
                <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">PatchCredResult</CSharpReference>
              </OutArgument>
            </up2:PatchCredentialInVault.out_Result>
          </up2:PatchCredentialInVault>
          <If DisplayName="If - pwd not patched then throw error" sap:VirtualizedContainerService.HintSize="450,474" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">PatchCredIsError</CSharpValue>
              </InArgument>
            </If.Condition>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,201" sap2010:WorkflowViewState.IdRef="Sequence_10">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Throw DisplayName="Throw-TE" sap:VirtualizedContainerService.HintSize="354,113" sap2010:WorkflowViewState.IdRef="Throw_2">
                  <InArgument x:TypeArguments="s:Exception">
                    <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">new Exception("Failed to patch credential in Hashicorp Vault. " + PatchCredError)</CSharpValue>
                  </InArgument>
                </Throw>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,103" sap2010:WorkflowViewState.IdRef="Sequence_11">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
          <Assign DisplayName="Assign-TE" sap:VirtualizedContainerService.HintSize="450,114" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="ss:SecureString">
                <CSharpReference x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">GlobalVariables.g_SecurePasswordCollHigh</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="ss:SecureString">
                <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">NewPassword</CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="UpdatePasswordDate - Invoke Workflow File (Process\\UpdatePasswordDate.xaml)" sap:VirtualizedContainerService.HintSize="450,177" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Process\\UpdatePasswordDate.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_Username">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">GlobalVariables.g_UserNameCollHigh</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="s:DateTime" x:Key="in_NewDate">
                <CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">DateTime.Today</CSharpValue>
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <up1:CollectionHighway_RefreshWorkArea DisplayName="CollectionHighway_RefreshWorkArea-DH" sap:VirtualizedContainerService.HintSize="450,266" sap2010:WorkflowViewState.IdRef="CollectionHighway_RefreshWorkArea_1">
            <up1:CollectionHighway_RefreshWorkArea.in_IsIncognito>
              <InArgument x:TypeArguments="x:Boolean">
                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">Convert.ToBoolean(GlobalVariables.g_Config["IsCollectionHighwayIncognito"])</CSharpValue>
              </InArgument>
            </up1:CollectionHighway_RefreshWorkArea.in_IsIncognito>
            <up1:CollectionHighway_RefreshWorkArea.in_MaxTimeout>
              <InArgument x:TypeArguments="x:Int32">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_72">Convert.ToInt32(GlobalVariables.g_Config["MaxTimeOutSec"])</CSharpValue>
              </InArgument>
            </up1:CollectionHighway_RefreshWorkArea.in_MaxTimeout>
            <up1:CollectionHighway_RefreshWorkArea.in_MedTimeout>
              <InArgument x:TypeArguments="x:Int32">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_73">Convert.ToInt32(GlobalVariables.g_Config["MediumTimeOutSec"])</CSharpValue>
              </InArgument>
            </up1:CollectionHighway_RefreshWorkArea.in_MedTimeout>
            <up1:CollectionHighway_RefreshWorkArea.out_IsRefreshWorkAreaSuccess>
              <OutArgument x:TypeArguments="x:Boolean">
                <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">IsRefreshWorkAreaSuccess</CSharpReference>
              </OutArgument>
            </up1:CollectionHighway_RefreshWorkArea.out_IsRefreshWorkAreaSuccess>
          </up1:CollectionHighway_RefreshWorkArea>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,103" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>